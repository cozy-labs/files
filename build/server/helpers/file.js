// Generated by CoffeeScript 1.9.3
module.exports = {
  normalizePath: function(path) {
    if (path === "/") {
      path = "";
    } else if (path.length > 0 && path[0] !== '/') {
      path = "/" + path;
    }
    return path;
  },
<<<<<<< HEAD
  processAttachment: function(req, res, next, download) {
    var contentHeader, file, stream;
    file = req.file;
    if (download) {
      contentHeader = "attachment; filename=" + file.name;
    } else {
      contentHeader = "inline; filename=" + file.name;
    }
    res.setHeader('content-disposition', contentHeader);
    stream = file.getBinary('file', function(err, stream) {
      if (err) {
        console.log(err);
        return next(new Error('An error occured while downloading the file.'));
      }
    });
    stream.pipefilter = function(source, dest) {
      var XSSmimeTypes, _ref;
      XSSmimeTypes = ['text/html', 'image/svg+xml'];
      if (_ref = source.headers['content-type'], __indexOf.call(XSSmimeTypes, _ref) >= 0) {
        return dest.setHeader('content-type', 'text/plain');
      }
    };
    return stream.pipe(res);
  },
=======
>>>>>>> 0759785e6a73787ae4d6166d455c268bcac75f20
  getFileClass: function(file) {
    var fileClass, type;
    type = file.headers['content-type'];
    switch (type.split('/')[0]) {
      case 'image':
        fileClass = "image";
        break;
      case 'application':
        fileClass = "document";
        break;
      case 'text':
        fileClass = "document";
        break;
      case 'audio':
        fileClass = "music";
        break;
      case 'video':
        fileClass = "video";
        break;
      default:
        fileClass = "file";
    }
    return fileClass;
  }
};
